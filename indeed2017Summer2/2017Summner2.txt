A - Tiling
Time limit : 2sec / Memory limit : 256MB

Score : 100 points

Problem Statement
A binary image is an image consisting of black and white pixels.

You are given a binary image with a height of H pixels and a width of W pixels as pi,j, a rectangular array of H¡ÁW characters. pi,j corresponds to the pixel at the i-th row from the top and j-th column from the left in the binary image. If pi,j = ., the corresponding pixel is white; if pi,j = #, the corresponding pixel is black.

Additionally, you are also given two integers A and B. Your task is to produce a new image with a height of A¡ÁH pixels and a width of B¡ÁW pixels, by arranging A¡ÁB copies of the given image in A rows and B columns. Output the obtained image in the same format as the input.

Constraints
1¡ÜH¡Ü10
1¡ÜW¡Ü10
1¡ÜA¡Ü10
1¡ÜB¡Ü10
pi,j is either . or #.
Input
Input is given from Standard Input in the following format:

H W A B
p1,1p1,2¡­p1,W
p2,1p2,2¡­p2,W
:
pH,1pH,2¡­pH,W
Output
Print (A¡ÁH)¡Á(B¡ÁW) characters qi,j representing the obtained image with a height of A¡ÁH pixels and a width of B¡ÁW pixels, in the following format:

q1,1q1,2¡­q1,B¡ÁW
q2,1q2,2¡­q2,B¡ÁW
:
qA¡ÁH,1qA¡ÁH,2¡­qA¡ÁH,B¡ÁW
Here, qi,j corresponds to the pixel at the i-th row from the top and j-th column from the left in the obtained image. If the corresponding pixel is white, qi,j must be .; if the corresponding pixel is black, qi,j must be #.

Sample Input 1
Copy
6 7 2 3
...#...
..#.#..
.#...#.
.#####.
.#...#.
.#...#.
Sample Output 1
Copy
...#......#......#...
..#.#....#.#....#.#..
.#...#..#...#..#...#.
.#####..#####..#####.
.#...#..#...#..#...#.
.#...#..#...#..#...#.
...#......#......#...
..#.#....#.#....#.#..
.#...#..#...#..#...#.
.#####..#####..#####.
.#...#..#...#..#...#.
.#...#..#...#..#...#.
Given is an image with a height of 6 pixels and a width of 7 pixels. By arranging copies of this image in 2 rows and 3 columns, print a new image with a height of 12 pixels and a width of 21 pixels.

Sample Input 2
Copy
6 7 1 1
...#...
..#.#..
.#...#.
.#####.
.#...#.
.#...#.
Sample Output 2
Copy
...#...
..#.#..
.#...#.
.#####.
.#...#.
.#...#.
If H=W=1, the output image will be the same as the input.


B - Mixing
Time limit : 2sec / Memory limit : 256MB

Score : 100 points

Problem Statement
We have N ingredients, numbered 1 through N, used in making medicines. We will compound two medicines using these ingredients. Each medicine will be made by mixing K ingredients chosen from the N ingredients we have. Here, it is not possible to use an ingredient in both medicines at the same time.

There are M rules that decide the efficacy of a medicine. The i-th rule is represented by a tuple of three integers (ai,bi,ui). Based on these rules, the efficacy of a medicine is calculated as below:

(efficacy) = (the sum of ui over all i such that both ingredients ai and bi are used in the medicine)
Here, if there does not exist i such that both ingredients ai and bi are used in the medicine, the efficacy of the medicine is 0.

Find the maximum possible sum of the efficacies of the two medicines that we will compound.

Constraints
All input values are integers.
4¡ÜN¡Ü8
2¡ÜK¡ÜN?2
1¡ÜM¡ÜN(N?1)?2
1¡Üai<bi¡ÜN
All pairs (ai,bi) are distinct.
1¡Üui¡Ü100
Input
Input is given from Standard Input in the following format:

N K M
a1 b1 u1
a2 b2 u2
:
aM bM uM
Output
Print the maximum possible sum of the efficacies of the two medicines that will be compounded.

Sample Input 1
Copy
5 2 4
1 2 20
1 3 10
2 4 10
2 5 15
Sample Output 1
Copy
25
The efficacy of the medicine compounded from ingredients 1 and 3 is 10, and the efficacy of the medicine compounded from ingredients 2 and 5 is 15. These two medicine can be compounded at the same time for a total efficacy of 25, which is the maximum possible sum.

Sample Input 2
Copy
7 3 3
1 2 10
1 3 10
2 3 10
Sample Output 2
Copy
30
The efficacy of the medicine compounded from ingredients 1, 2 and 3 is 10+10+10=30. If this medicine is compounded, no matter what ingredients is used to compound the other medicine, the efficacy of that other medicine will be 0. The total efficacy will be 30 in this case, which is the maximum possible sum.

Sample Input 3
Copy
8 4 8
1 2 10
2 3 20
3 4 30
4 5 40
5 6 50
6 7 60
7 8 70
1 8 80
Sample Output 3
Copy
300


C - Warping
Time limit : 2sec / Memory limit : 256MB

Score : 100 points

Problem Statement
There is a rectangular board divided into a grid with H rows and W columns. Each square of the grid is painted in either black or white. Below, we will denote the square at the i-th row from the top and j-th column from the left as (i,j). You are given the color of (i,j) as a character ci,j. If ci,j = ., (i,j) is white; if ci,j = #, (i,j) is black. Here, (1,1) and (H,W) are always white.

There is a piece placed at (1,1). Your objective is to transfer the piece to (H,W). The following two kinds of operations can be used to move the piece:

Normal move: Let the square currently occupied by the piece be (y,x). Move the piece to one of the following: (y,x+1), (y+1,x), (y,x?1) and (y?1,x). Here, the destination may not be a black square or a non-existent square. This operation may be executed any number of times.

Warp: Let the square currently occupied by the piece be (y,x). Move the piece to (y+D,x+R). Here, the values of R and D are predetermined. This operation cannot be executed if (y+D,x+R) is black or the square does not exist. This operation may be executed at most once (you may choose not to execute this).

Determine whether it is possible to transfer the piece to (H,W). If the transfer is possible, find the minimum necessary number of operations (both kinds of operations count).

Constraints
2¡ÜH¡Ü10
2¡ÜW¡Ü10
?(H?1)¡ÜD¡ÜH?1
?(W?1)¡ÜR¡ÜW?1
The pair (D,R) is different from all of the following: (0,0),(0,1),(1,0),(0,?1) and (?1,0).
ci,j is either . or #.
c1,1 and cH,W are both ..
Input
Input is given from Standard Input in the following format:

H W D R
c1,1c1,2¡­c1,W
c2,1c2,2¡­c2,W
:
cH,1cH,2¡­cH,W
Output
If it is possible to transfer the piece to (H,W), print the minimum necessary number of operations.

If it is possible to transfer the piece to (H,W), print -1.

Sample Input 1
Copy
3 6 2 1
...#..
..##..
..#...
Sample Output 1
Copy
5
It is possible to transfer the piece from (1,1) to (3,6) in five operations, as follows:

Normal move: (1,1)¡ú(1,2)
Normal move: (1,2)¡ú(1,3)
Warp: (1,3)¡ú(3,4)
Normal move: (3,4)¡ú(3,5)
Normal move: (3,5)¡ú(3,6)
It is not possible to transfer the piece in fewer operations.

Sample Input 2
Copy
3 7 2 1
..#..#.
.##.##.
.#..#..
Sample Output 2
Copy
-1
Since Warp can only be used once, the transfer is not possible.

Sample Input 3
Copy
6 6 -2 0
.#....
.#.#..
.####.
.#..#.
.##.#.
....#.
Sample Output 3
Copy
21
The values of D and R may be zero or negative.

Sample Input 4
Copy
3 4 -1 -2
....
....
....
Sample Output 4
Copy
5
You may choose not to use Warp.


D - Locating
Time limit : 2sec / Memory limit : 256MB

Score : 100 points

Problem Statement
There is a road with a length of L meters that runs east-west, and there are N houses built along this road. The i-th house from the west is located xi meters east of the west end of the road, and there are ri people who live in the house.

A station is going to be built on this road, and there was a discussion on the location of the station. Let the location of the station be P meters east of the west end of the road. According to the law, P must be a integer satisfying 0¡ÜP¡ÜL. After the discussion, it was decided that the location of the station will be chosen so that it minimizes the disutility calculated as follows:

(disutility) = (the sum of (|xi?P|¡Ári) over all i (1¡Üi¡ÜN))
Here, |a| denotes the absolute value of a.

Find the disutility when the location of the station is chosen to minimize it.

Constraints
All input values are integers.
1¡ÜL¡Ü1010
1¡ÜN¡Ü105
0¡Üx1<x2<¡­<xN¡ÜL
1¡Üri¡Ü103
Input
The input is given from Standard Input in the following format:

L N
x1 r1
x2 r2
:
xN rN
Output
Print the disutility when the location of the station is chosen to minimize it.

Sample Input 1
Copy
100 3
20 3
50 2
70 1
Sample Output 1
Copy
110
When P=40, the disutility is |20?40|¡Á3+|50?40|¡Á2+|70?40|¡Á1=110. There is no location with a lower disutility.

Sample Input 2
Copy
100 2
0 1
100 10
Sample Output 2
Copy
100
There may be houses at both ends of the road, and the station may also be built at these locations.

Sample Input 3
Copy
10000000000 5
3282894320 391
4394338332 929
6932893249 181
7823822843 440
9322388365 623
Sample Output 3
Copy
5473201404068
The input values or the expected output may not fit into 32-bit integers.